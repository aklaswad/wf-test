name: Post schema changes
on:
  pull_request:
    types:
      - opened
      - synchronize
    paths:
      - sql/schema.sql
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md#mysql
      - name: Start mysql
        run: sudo systemctl start mysql.service
      - name: Check out
        uses: actions/checkout@v3
      - name: Download mysqldef
        run: wget -O - https://github.com/k0kubun/sqldef/releases/latest/download/mysqldef_linux_amd64.tar.gz | tar xvz
      - name: Fetch latest main schema
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_REPOSITORY: ${{ github.repository.name }}
        run: |
          gh api \
            -H "Accept: application/vnd.github.v3.raw" \
            "repos/${GITHUB_REPOSITORY}/contents/sql/schema.sql?ref=main" > main.sql
      - name: Create DB for compare
        run: |
          mysql -uroot -proot -e 'CREATE DATABASE testing CHARACTER SET utf8mb4'
          mysql -uroot -proot testing < main.sql
          mysql -uroot -proot testing -e 'show create table book'
      - name: Check schema diff
        run: |
          set -x
          alter="$(./mysqldef -uroot -proot --file sql/schema.sql --dry-run testing)"
          delimiter="$(openssl rand -hex 8)"
          cat << __HEREDOC__ > __schema_update.comment.txt
          # Schema update

          \`\`\`
          $alter
          \`\`\`
          __HEREDOC__
          cat __schema_update.comment.txt
      - name: Post diff to pull comment
        env:
          PULL_NUMBER: ${{ github.event.number }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh pr comment -F __schema_update.comment.txt --edit-last "${PULL_NUMBER}" || \
          gh pr comment -F __schema_update.comment.txt "${PULL_NUMBER}"
          - name: pull info
          uses: actions/github-script@v6
          with:
            script: |
              const { owner, repo } = context.repo
              const pullNumber = context.payload.pull.number
              const comments = await github.request(`GET /repos/${owner}/${repo}/issues/${pullNumber}/comments`, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pullNumber,
                headers: {
                  'X-GitHub-Api-Version': '2022-11-28'
                }
              })
              console.dir(comments, {depth: null})
